apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: elastic2
  name: elastic2
  namespace: elastic
spec:
  replicas: 1
  selector:
    matchLabels:
      run: elastic2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: elastic2
      labels:
        run: elastic2
      namespace: elastic
    spec:
      initContainers:
        - name: set-vm-max-map-count
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
          - sysctl
          - -w
          - vm.max_map_count=262166
          securityContext:
            privileged: true
            runAsUser: 0
            runAsNonRoot: False
        - name: chown
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"] 
          args: ["-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"] 
          volumeMounts:
            - name: elastic2-data
              mountPath: /usr/share/elasticsearch/data
          securityContext:
            privileged: true
            runAsUser: 0
            runAsNonRoot: False
      containers:
        - image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
          imagePullPolicy: Always
          name: elastic2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: cluster.name
              value: elastic
            - name: node.name
              value: elastic2
            - name: network.host
              value: "0.0.0.0"
            - name: ES_JAVA_OPTS
              value: "-Xms512m -Xmx512m"
            - name: transport.port
              value: "9300"
            - name: discovery.seed_hosts
              value: "elastic1:9300,elastic129300,elastic3:9300"
            - name: cluster.initial_master_nodes
              value: "elastic1:9300,elastic2:9300,elastic3:9300"
          ports:
            - name: publish
              containerPort: 9200
              protocol: TCP
            - name: node
              containerPort: 9300
              protocol: TCP
          volumeMounts:
            - name: elastic2-data
              mountPath: /usr/share/elasticsearch/data
          securityContext:
            privileged: true
            runAsUser: 1000
            runAsGroup: 0
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: elastic2-data
          persistentVolumeClaim:
            claimName: elastic2-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: elastic2
  name: elastic2
  namespace: elastic
spec:
  ports:
    - name: external
      port: 9201
      protocol: TCP
      targetPort: 9200
    - name: internal
      port: 9301
      protocol: TCP
      targetPort: 9300
  selector:
    run: elastic2
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elastic2-data-pvc
  namespace: elastic
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi