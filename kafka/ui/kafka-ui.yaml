apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka-ui
  name: kafka-ui
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: kafka-ui
    spec:
      containers:
        - image: ghcr.io/channelit/kafka-ui:latest
          imagePullPolicy: Always
          name: kafka-ui
          resources:
            requests:
              memory: "1024Mi"
              cpu: "400m"
            limits:
              memory: "1024Mi"
              cpu: "400m"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          command: ["java", "-Dspring.config.additional-location=/config/config.yml", "-jar"]
          args: ["/opt/kafka-ui/kafka-ui.jar"]
          env:
            - name: MY_CLUSTER
              value: hello_world
          ports:
            - name: ui
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              port: 8080
              scheme: "HTTP"
              path: "/actuator/health"
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              port: 8080
              scheme: "HTTP"
              path: "/actuator/health"
            initialDelaySeconds: 30
            periodSeconds: 30
            failureThreshold: 3
          volumeMounts:
              - name: kafka-ui-config-yml
                mountPath: /config
                readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka-ui-config
          configMap:
            name: kafka-ui-config
        - name: kafka-ui-config-yml
          configMap:
            name: kafka-ui-config
            items:
                - key: "config.yml"
                  path: "config.yml"
                  mode: 0777
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka-ui
  name: kafka-ui
  namespace: kafka
spec:
  ports:
    - name: kafka-ui
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: kafka-ui
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-ui-config
  namespace: kafka
data:
  config.yml: |
    kafka:
      clusters:
        - 
          name: ${MY_CLUSTER}
          bootstrapServers: kafka1:9091,kafka2:9092,kafka3:9093
          schemaRegistry: http://schema-registry:8081