apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka-ui
  name: kafka-ui
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: kafka-ui
    spec:
      containers:
        - image: ghcr.io/channelit/kafka-ui:latest
          imagePullPolicy: Always
          name: kafka-ui
          resources:
            requests:
              memory: "1024M"
              cpu: "800m"
            limits:
              memory: "1024M"
              cpu: "1000m"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          command: ["java", "-jar"]
          args: ["/opt/kafka-ui/kafka-ui.jar"]
          env:
            - name: KAFKA_CLUSTERS_0_NAME
              valueFrom:
                configMapKeyRef:
                  name: kafka-ui-config
                  key: KAFKA_CLUSTERS_0_NAME
            - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
              valueFrom:
                configMapKeyRef:
                  name: kafka-ui-config
                  key: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
            - name: AUTH_TYPE
              valueFrom:
                configMapKeyRef:
                  name: kafka-ui-config
                  key: AUTH_TYPE
            - name: MANAGEMENT_HEALTH_LDAP_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: kafka-ui-config
                  key: MANAGEMENT_HEALTH_LDAP_ENABLED
          ports:
            - name: ui
              containerPort: 8080
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka-ui-config
          configMap:
            name: kafka-ui-config
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka-ui
  name: kafka-ui
  namespace: kafka
spec:
  ports:
    - name: kafka-ui
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: kafka-ui
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-ui-config
  namespace: kafka
data:
  KAFKA_CLUSTERS_0_NAME: "local"
  KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9091,kafka2:9092,kafka3:9093"
  AUTH_TYPE: "DISABLED"
  MANAGEMENT_HEALTH_LDAP_ENABLED: "FALSE"