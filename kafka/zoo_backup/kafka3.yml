apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka3
  name: kafka3
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: kafka3
      labels:
        run: kafka3
    spec:
      containers:
        - image: ghcr.io/channelit/kafka:latest
          imagePullPolicy: Always
          name: kafka3
          command: ["/bin/sh"]
          args: ["-c", "/opt/kafka/bin/kafka-server-start.sh /conf/server.properties"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: JMX_PORT
              value: "9998"
          ports:
            - name: server1
              containerPort: 29091
              protocol: TCP
            - name: server2
              containerPort: 29092
              protocol: TCP
            - name: server3
              containerPort: 29093
              protocol: TCP
            - name: client1
              containerPort: 9091
              protocol: TCP
            - name: client2
              containerPort: 9092
              protocol: TCP
            - name: client3
              containerPort: 9093
              protocol: TCP
            - name: client-outside
              containerPort: 39093
              protocol: TCP
          volumeMounts:
            - name: kafka3-volume
              mountPath: /conf/server.properties
              subPath: server.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka3-volume
          configMap:
            name: kafka3-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka3
  name: kafka3
  namespace: kafka
spec:
  ports:
    - name: internal
      port: 29093
      protocol: TCP
      targetPort: 29093
    - name: external
      port: 9093
      protocol: TCP
      targetPort: 9093
    - name: ui
      port: 39093
      protocol: TCP
      targetPort: 39093
  selector:
    run: kafka3
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka3-config
  namespace: kafka
data:
  server.properties: |
      broker.id=3
      listeners=INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093,UI://0.0.0.0:39093
      advertised.listeners=INTERNAL://kafka3:29093,EXTERNAL://localhost:9093,UI://kafka3:39093
      inter.broker.listener.name=INTERNAL
      listener.security.protocol.map=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,UI:PLAINTEXT
      num.network.threads=9
      num.io.threads=8
      socket.send.buffer.bytes=102400
      socket.receive.buffer.bytes=102400
      socket.request.max.bytes=104857600
      log.dirs=/opt/kafka/kafka-logs
      num.partitions=1
      num.recovery.threads.per.data.dir=3
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
      transaction.state.log.min.isr=1
      log.retention.hours=168
      log.segment.bytes=1073741824
      log.retention.check.interval.ms=300000
      zookeeper.connect=zoo1.zookeeper.svc.cluster.local:2181,zoo2.zookeeper.svc.cluster.local:2181,zoo3.zookeeper.svc.cluster.local:2181/kafka
      zookeeper.connection.timeout.ms=18000
      group.initial.rebalance.delay.ms=0