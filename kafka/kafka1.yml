apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka1
  name: kafka1
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: kakfa1
      labels:
        run: kafka1
    spec:
      containers:
        - image: cithub/kafka
          imagePullPolicy: Always
          name: kafka1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - name: server
              containerPort: 29092
              protocol: TCP
            - name: client1
              containerPort: 9091
              protocol: TCP
            - name: client2
              containerPort: 9092
              protocol: TCP
            - name: client3
              containerPort: 9093
              protocol: TCP
            - name: client-outside
              containerPort: 30091
              protocol: TCP
          volumeMounts:
            - name: kafka1-volume
              mountPath: /conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka1-volume
          persistentVolumeClaim:
            claimName: kafka1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka1
  name: kafka1
  namespace: kafka
spec:
  ports:
  ports:
    - name: external1
      port: 30091
      protocol: TCP
      targetPort: 30091
      # nodePort: 30091
  selector:
    run: kafka1
  type: LoadBalancer
---
# apiVersion: networking.k8s.io/v1beta1
# kind: Ingress
# metadata:
#   name: kafka1-ingress
#   namespace: kafka
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: kafka1.kubernetes.docker.internal
#     http:
#       paths:
#       - backend:
#           serviceName: kafka1
#           servicePort: 9092
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: kafka1-ingress
#   namespace: kafka
#   annotations:
#     kubernetes.io/ingress.class: nginx
# spec:
#   rules:
#     - host: kafka1.local
#       http:
#         paths:
#           - backend:
#               serviceName: kafka1
#               servicePort: 9091
#             path: /
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka1
  labels:
    run: kafka1
  namespace: kafka
spec:
  storageClassName: hostpath
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/Users/hardikpatel/workbench/projects/cit/kube-deploys/kafka/config/kafka1"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka1
  namespace: kafka
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi