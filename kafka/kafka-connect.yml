apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka-connect
  name: kafka-connect
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka-connect
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: kafka-connect
    spec:
      containers:
        - image: cithub/kafka
          env:
            - name: broker
              valueFrom:
                secretKeyRef:
                  name: broker
                  key: broker
          imagePullPolicy: Always
          name: kafka-connect
          command: ["./opt/kafka/bin/connect-distributed.sh", "/conf/worker.properties"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          ports:
            - name: rest
              containerPort: 8082
              protocol: TCP
          volumeMounts:
            - name: kafka-connect-volume
              mountPath: /conf/worker.properties
              subPath: worker.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka-connect-volume
          configMap:
            name: kafka-connect-config
        - name: broker
          secret:
            secretName: broker
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka-connect
  name: kafka-connect
  namespace: kafka
spec:
  ports:
    - name: rest
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    run: kafka-connect
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connect-config
  namespace: kafka
data:
  worker.properties: |
      group.id=workers
      bootstrap.servers=${broker}
      key.converter=org.apache.kafka.connect.json.JsonConverter
      value.converter=org.apache.kafka.connect.json.JsonConverter
      plugin.path=/plugins/
      rest.port=8082
      config.storage.topic=worker-config
      offset.storage.topic=worker-offset
      status.storage.topic=worker-status
      heartbeat.interval.ms=5000