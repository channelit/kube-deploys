apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafdrop
  name: kafdrop
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafdrop
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: kafdrop
    spec:
      containers:
        - image: obsidiandynamics/kafdrop
          imagePullPolicy: Always
          name: kafdrop
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: KAFKA_BROKERCONNECT
              value: "kafka1:39091,kafka2:39092,kafka3:39093"
            - name: JVM_OPTS
              value: "-Xms32M -Xmx64M"
            - name: SERVER_SERVLET_CONTEXTPATH
              value: "/"
          ports:
            - name: ui
              containerPort: 9000
              protocol: TCP
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafdrop
  name: kafdrop
  namespace: kafka
spec:
  ports:
    - name: kafdrop
      port: 9001
      protocol: TCP
      targetPort: 9000
  selector:
    run: kafdrop
  sessionAffinity: None
  type: LoadBalancer
