apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: kafka
  name: kafka
  namespace: confluent
spec:
  replicas: 1
  selector:
    matchLabels:
      run: kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: kafka
      labels:
        run: kafka
    spec:
      containers:
        - image: confluentinc/cp-kafka:7.9.0
          imagePullPolicy: Always
          name: kafka
          resources:
            requests:
              memory: "1024M"
              cpu: "500m"
            limits:
              memory: "1024M"
              cpu: "500m"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          env:
            - name: CONFLUENT_SUPPORT_CUSTOMER_ID
              value: "anonymous"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_BROKER_ID
              value: '1'
            - name: KAFKA_JMX_PORT
              value: '19091'
            - name: CLUSTER_ID
              value: 'o8hZC38eROOUpiucL9DbTA'
            - name: KAFKA_CLUSTER_ID
              value: 'o8hZC38eROOUpiucL9DbTA'
            - name: KAFKA_NODE_ID
              value: '1'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'BROKER:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'BROKER://ckafka:9092,CONTROLLER://ckafka:29092,EXTERNAL://localhost:39092'
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: '0'
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: '1'
            - name: KAFKA_PROCESS_ROLES
              value: 'broker,controller'
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: '1@localhost:29092'
            - name: KAFKA_LISTENERS
              value: 'BROKER://localhost:9092,CONTROLLER://localhost:29092,EXTERNAL://localhost:39092'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: 'BROKER'
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: 'CONTROLLER'
            - name: KAFKA_LOG_DIRS
              value: '/tmp/kraft-combined-logs'
          ports:
            - name: broker
              containerPort: 9092
              protocol: TCP
            - name: controller
              containerPort: 29092
              protocol: TCP
            - name: external
              containerPort: 39092
              protocol: TCP
          volumeMounts:
            - name: kafka-volume
              mountPath: /conf/server.properties
              subPath: server.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kafka-volume
          configMap:
            name: kafka-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: kafka
  name: ckafka
  namespace: confluent
spec:
  ports:
    - name: broker
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: controller
      port: 29092
      protocol: TCP
      targetPort: 29092
    - name: external
      port: 39092
      protocol: TCP
      targetPort: 39092
  selector:
    run: kafka
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: confluent
data:
  server.properties: |
      node.id=1
      process.roles=broker,controller
      controller.quorum.voters=1@localhost:29091,2@0kafka2:29092,3@kafka3:29093
      listeners=PLAINTEXT://0.0.0.0:9091,CONTROLLER://0.0.0.0:29091,EXTERNAL://0.0.0.0:39091
      listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL,EXTERNAL:PLAINTEXT
      advertised.listeners=PLAINTEXT://kafka:9091,CONTROLLER://kafka:29091,EXTERNAL://localhost:39091
      num.network.threads=3
      num.io.threads=8
      inter.broker.listener.name=PLAINTEXT
      controller.listener.names=CONTROLLER
      socket.send.buffer.bytes=10240
      socket.receive.buffer.bytes=102400
      socket.request.max.bytes=104857600
      num.partitions=1
      offsets.topic.replication.factor=1
      num.recovery.threads.per.data.dir=1
      transaction.state.log.replication.factor=1
      transaction.state.log.min.isr=1
      log.retention.hours=168
      log.segment.bytes=1073741824
      log.retention.check.interval.ms=300000
      authorizer.class.name=org.apache.kafka.metadata.authorizer.StandardAuthorizer
      early.start.listeners=CONTROLLER
      allow.everyone.if.no.acl.found=true
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: kafka
#   labels:
#     run: kafka
#   namespace: confluent
# spec:
#   storageClassName: hostpath
#   capacity:
#     storage: 512Mi
#   accessModes:
#     - ReadWriteOnce
#   hostPath:
#     path: "/Users/hardikpatel/workbench/projects/kube-deploys/kafka/data/kafka"
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: kafka
#   namespace: confluent
# spec:
#   storageClassName: hostpath
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 512Mi