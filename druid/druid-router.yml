apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: druid-router
  name: druid-router
  namespace: druid
spec:
  replicas: 1
  selector:
    matchLabels:
      run: druid-router
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: druid-router
      labels:
        run: druid-router
    spec:
      containers:
        - image: apache/druid:0.21.1
          imagePullPolicy: Always
          name: druid-router
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          args: ["router"]
          env:
            - name: DRUID_SET_HOST
              value: "druid-router"
          envFrom:
            - configMapRef:
                name: druid-environment
          ports:
            - name: router
              containerPort: 8888
              protocol: TCP
          volumeMounts:
            - name: druid-common-runtime-properties
              mountPath: /opt/druid/conf/druid/cluster/_common/common.runtime.properties
              subPath: common.runtime.properties
          volumeMounts:
            - name: router-runtime-properties
              mountPath: /opt/druid/conf/druid/cluster/query/router/runtime.properties
              subPath: runtime.properties
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: druid-common-runtime-properties
          configMap:
            name: druid-common-runtime-properties
      volumes:
        - name: router-runtime-properties
          configMap:
            name: router-runtime-properties
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: druid-router
  name: druid-router
  namespace: druid
spec:
  ports:
    - name: inernal
      port: 8888
      protocol: TCP
      targetPort: 8888
  selector:
    run: druid-router
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: router-runtime-properties
  namespace: druid
data:
  runtime.properties: |
      druid.host=druid-router.druid
      druid.service=druid/router
      druid.plaintextPort=8888

      # HTTP proxy
      druid.router.http.numConnections=50
      druid.router.http.readTimeout=PT5M
      druid.router.http.numMaxThreads=100
      druid.server.http.numThreads=100

      # Service discovery
      druid.router.defaultBrokerServiceName=druid/broker
      druid.router.coordinatorServiceName=druid/coordinator

      # Management proxy to coordinator / overlord: required for unified web console.
      druid.router.managementProxy.enabled=true