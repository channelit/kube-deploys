apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      run: postgres
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      name: postgres
      labels:
        run: postgres
    spec:
      containers:
        - image: debezium/postgres:12
          imagePullPolicy: Always
          name: postgres
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          args: ["-c", "config_file=/usr/share/postgresql/postgresql.conf.sample"]
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: cits
            - name: POSTGRES_PASSWORD
              value: admin
          ports:
            - name: db
              containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: postgres-volume
              mountPath: /usr/share/postgresql/postgresql.conf.sample
              subPath: postgresql.conf.sample
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: postgres-volume
          configMap:
            name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: postgres
  name: postgres
  namespace: postgres
spec:
  ports:
    - name: db
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    run: postgres
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: postgres
data:
  postgresql.conf.sample: |
      log_min_error_statement = fatal
      listen_addresses = '*'
      shared_preload_libraries = 'decoderbufs,wal2json'
      wal_level = logical
      max_wal_senders = 1
      #wal_keep_segments = 4
      #wal_sender_timeout = 60s
      max_replication_slots = 1